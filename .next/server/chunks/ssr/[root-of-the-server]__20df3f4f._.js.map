{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Desktop/Career%20Compass/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\n// Check if API key is available\nconst apiKey = process.env.GEMINI_API_KEY;\n\nif (!apiKey) {\n  console.warn('⚠️  GEMINI_API_KEY not found in environment variables.');\n  console.warn('   Please create a .env.local file with your Gemini API key:');\n  console.warn('   GEMINI_API_KEY=your_api_key_here');\n  console.warn('   Get your API key from: https://makersuite.google.com/app/apikey');\n}\n\nexport const ai = genkit({\n  plugins: [googleAI({apiKey: apiKey || 'dummy-key'})],\n  model: 'googleai/gemini-2.0-flash',\n});\n\n// Export API key status for debugging\nexport const isApiKeyConfigured = !!apiKey;\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;AAAA;;;AAEA,gCAAgC;AAChC,MAAM,SAAS,QAAQ,GAAG,CAAC,cAAc;AAEzC,IAAI,CAAC,QAAQ;IACX,QAAQ,IAAI,CAAC;IACb,QAAQ,IAAI,CAAC;IACb,QAAQ,IAAI,CAAC;IACb,QAAQ,IAAI,CAAC;AACf;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;YAAC,QAAQ,UAAU;QAAW;KAAG;IACpD,OAAO;AACT;AAGO,MAAM,qBAAqB,CAAC,CAAC","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Desktop/Career%20Compass/src/ai/flows/generate-career-suggestions.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview This file defines Genkit flows for generating career suggestions based on a student's study level and specialization.\n * - generateFutureStudies - Generates suggestions for future studies.\n * - generatePlacementsAndJobs - Generates suggestions for placements and jobs.\n * - generateCollegeSuggestions - Generates suggestions for colleges.\n * - CareerSuggestionInput - The input type for the flows.\n */\n\nimport {ai, isApiKeyConfigured} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst CareerSuggestionInputSchema = z.object({\n  studyLevel: z.string().describe(\"The student's study level (e.g., B.Tech, M.Tech, MBA, Diploma).\"),\n  course: z.string().describe(\"The student's course or field of study (e.g., Computer Science & Engineering, Mechanical Engineering).\"),\n  specialization: z.string().optional().describe(\"The student's specialization within their course (e.g., Artificial Intelligence & Machine Learning, Robotics). Can be 'N/A' if not applicable.\"),\n});\nexport type CareerSuggestionInput = z.infer<typeof CareerSuggestionInputSchema>;\n\nconst FutureStudiesOutputSchema = z.object({\n  futureStudies: z.string().describe('AI-powered suggestions for future studies, 2-3 sentences.'),\n});\n\nconst PlacementsAndJobsOutputSchema = z.object({\n    placementsAndJobs: z.string().describe('AI-powered suggestions for placements and jobs, 2-3 sentences.'),\n});\n\nconst CollegeSuggestionsOutputSchema = z.object({\n    collegeSuggestions: z.string().describe('A list of 4-5 popular colleges for the suggested future studies, including a brief detail about each. Format as a comma-separated list.'),\n});\n\n// Fallback responses when API is not available\nconst getFallbackResponse = (type: 'futureStudies' | 'placementsAndJobs' | 'collegeSuggestions', input: CareerSuggestionInput) => {\n  const { studyLevel, course, specialization } = input;\n  const specText = specialization && specialization !== 'N/A' ? ` with a specialization in ${specialization}` : '';\n  \n  switch (type) {\n    case 'futureStudies':\n      return `Based on your ${studyLevel} in ${course}${specText}, consider pursuing advanced studies in related fields. You could explore specialized master's programs, industry certifications, or research opportunities that align with your academic background and career goals.`;\n    \n    case 'placementsAndJobs':\n      return `With your ${studyLevel} in ${course}${specText}, you're well-positioned for roles in technology, engineering, and related industries. Consider positions in software development, system design, project management, or research and development.`;\n    \n    case 'collegeSuggestions':\n      return `Top institutions for your field include MIT (renowned for engineering excellence), Stanford University (leading in technology innovation), Carnegie Mellon University (expertise in computer science), University of California Berkeley (strong engineering programs), and Georgia Institute of Technology (excellent technical education).`;\n    \n    default:\n      return 'Career guidance is currently being generated based on your academic profile.';\n  }\n};\n\nexport async function generateFutureStudies(input: CareerSuggestionInput): Promise<string> {\n  if (!isApiKeyConfigured) {\n    return getFallbackResponse('futureStudies', input);\n  }\n  \n  try {\n    const result = await futureStudiesFlow(input);\n    return result.futureStudies;\n  } catch (error) {\n    console.error('Error generating future studies:', error);\n    return getFallbackResponse('futureStudies', input);\n  }\n}\n\nexport async function generatePlacementsAndJobs(input: CareerSuggestionInput): Promise<string> {\n  if (!isApiKeyConfigured) {\n    return getFallbackResponse('placementsAndJobs', input);\n  }\n  \n  try {\n    const result = await placementsAndJobsFlow(input);\n    return result.placementsAndJobs;\n  } catch (error) {\n    console.error('Error generating placements and jobs:', error);\n    return getFallbackResponse('placementsAndJobs', input);\n  }\n}\n\nexport async function generateCollegeSuggestions(input: CareerSuggestionInput): Promise<string> {\n  if (!isApiKeyConfigured) {\n    return getFallbackResponse('collegeSuggestions', input);\n  }\n  \n  try {\n    const result = await collegeSuggestionsFlow(input);\n    return result.collegeSuggestions;\n  } catch (error) {\n    console.error('Error generating college suggestions:', error);\n    return getFallbackResponse('collegeSuggestions', input);\n  }\n}\n\n// Prompt for Future Studies\nconst futureStudiesPrompt = ai.definePrompt({\n  name: 'futureStudiesPrompt',\n  input: {schema: CareerSuggestionInputSchema},\n  output: {schema: FutureStudiesOutputSchema},\n  prompt: `You are a career counselor. The student is pursuing a {{studyLevel}} in {{course}}{{#if specialization}}, with a specialization in {{specialization}}{{/if}}.\nSuggest suitable future study options. Provide 2–3 sentences.\nProvide your response as a valid JSON object that conforms to the output schema.`,\n});\n\n// Prompt for Placements and Jobs\nconst placementsAndJobsPrompt = ai.definePrompt({\n  name: 'placementsAndJobsPrompt',\n  input: {schema: CareerSuggestionInputSchema},\n  output: {schema: PlacementsAndJobsOutputSchema},\n  prompt: `You are a career counselor. The student is pursuing a {{studyLevel}} in {{course}}{{#if specialization}}, with a specialization in {{specialization}}{{/if}}.\nSuggest possible jobs and placements in the current market. Provide 2–3 sentences.\nProvide your response as a valid JSON object that conforms to the output schema.`,\n});\n\n// Prompt for College Suggestions\nconst collegeSuggestionsPrompt = ai.definePrompt({\n  name: 'collegeSuggestionsPrompt',\n  input: {schema: CareerSuggestionInputSchema},\n  output: {schema: CollegeSuggestionsOutputSchema},\n  prompt: `You are a career counselor. The student is pursuing a {{studyLevel}} in {{course}}{{#if specialization}}, with a specialization in {{specialization}}{{/if}}.\nSuggest 4-5 popular colleges for the recommended future study options, including a brief detail about each.\nProvide your response as a valid JSON object that conforms to the output schema.`,\n});\n\nconst createSuggestionFlow = (name: string, prompt: any, inputSchema: any, outputSchema: any) => {\n    return ai.defineFlow(\n        {\n            name,\n            inputSchema,\n            outputSchema,\n        },\n        async (input: z.infer<typeof inputSchema>) => {\n            const promptInput = {\n                ...input,\n                specialization: input.specialization && input.specialization !== 'N/A' ? input.specialization : '',\n            };\n            const result = await prompt(promptInput);\n            const output = result.output;\n            if (!output) {\n                throw new Error('No output from AI');\n            }\n            return output;\n        }\n    );\n}\n\nconst futureStudiesFlow = createSuggestionFlow('futureStudiesFlow', futureStudiesPrompt, CareerSuggestionInputSchema, FutureStudiesOutputSchema);\nconst placementsAndJobsFlow = createSuggestionFlow('placementsAndJobsFlow', placementsAndJobsPrompt, CareerSuggestionInputSchema, PlacementsAndJobsOutputSchema);\nconst collegeSuggestionsFlow = createSuggestionFlow('collegeSuggestionsFlow', collegeSuggestionsPrompt, CareerSuggestionInputSchema, CollegeSuggestionsOutputSchema);\n"],"names":[],"mappings":";;;;;;;AAGA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,8BAA8B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,YAAY,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAChC,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC5B,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AACjD;AAGA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACrC;AAEA,MAAM,gCAAgC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,mBAAmB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC3C;AAEA,MAAM,iCAAiC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5C,oBAAoB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC5C;AAEA,+CAA+C;AAC/C,MAAM,sBAAsB,CAAC,MAAoE;IAC/F,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,cAAc,EAAE,GAAG;IAC/C,MAAM,WAAW,kBAAkB,mBAAmB,QAAQ,CAAC,0BAA0B,EAAE,gBAAgB,GAAG;IAE9G,OAAQ;QACN,KAAK;YACH,OAAO,CAAC,cAAc,EAAE,WAAW,IAAI,EAAE,SAAS,SAAS,sNAAsN,CAAC;QAEpR,KAAK;YACH,OAAO,CAAC,UAAU,EAAE,WAAW,IAAI,EAAE,SAAS,SAAS,kMAAkM,CAAC;QAE5P,KAAK;YACH,OAAO,CAAC,4UAA4U,CAAC;QAEvV;YACE,OAAO;IACX;AACF;AAEO,eAAe,sBAAsB,KAA4B;IACtE,IAAI,CAAC,mHAAA,CAAA,qBAAkB,EAAE;QACvB,OAAO,oBAAoB,iBAAiB;IAC9C;IAEA,IAAI;QACF,MAAM,SAAS,MAAM,kBAAkB;QACvC,OAAO,OAAO,aAAa;IAC7B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,OAAO,oBAAoB,iBAAiB;IAC9C;AACF;AAEO,eAAe,0BAA0B,KAA4B;IAC1E,IAAI,CAAC,mHAAA,CAAA,qBAAkB,EAAE;QACvB,OAAO,oBAAoB,qBAAqB;IAClD;IAEA,IAAI;QACF,MAAM,SAAS,MAAM,sBAAsB;QAC3C,OAAO,OAAO,iBAAiB;IACjC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yCAAyC;QACvD,OAAO,oBAAoB,qBAAqB;IAClD;AACF;AAEO,eAAe,2BAA2B,KAA4B;IAC3E,IAAI,CAAC,mHAAA,CAAA,qBAAkB,EAAE;QACvB,OAAO,oBAAoB,sBAAsB;IACnD;IAEA,IAAI;QACF,MAAM,SAAS,MAAM,uBAAuB;QAC5C,OAAO,OAAO,kBAAkB;IAClC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yCAAyC;QACvD,OAAO,oBAAoB,sBAAsB;IACnD;AACF;AAEA,4BAA4B;AAC5B,MAAM,sBAAsB,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC1C,MAAM;IACN,OAAO;QAAC,QAAQ;IAA2B;IAC3C,QAAQ;QAAC,QAAQ;IAAyB;IAC1C,QAAQ,CAAC;;gFAEqE,CAAC;AACjF;AAEA,iCAAiC;AACjC,MAAM,0BAA0B,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC9C,MAAM;IACN,OAAO;QAAC,QAAQ;IAA2B;IAC3C,QAAQ;QAAC,QAAQ;IAA6B;IAC9C,QAAQ,CAAC;;gFAEqE,CAAC;AACjF;AAEA,iCAAiC;AACjC,MAAM,2BAA2B,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC/C,MAAM;IACN,OAAO;QAAC,QAAQ;IAA2B;IAC3C,QAAQ;QAAC,QAAQ;IAA8B;IAC/C,QAAQ,CAAC;;gFAEqE,CAAC;AACjF;AAEA,MAAM,uBAAuB,CAAC,MAAc,QAAa,aAAkB;IACvE,OAAO,mHAAA,CAAA,KAAE,CAAC,UAAU,CAChB;QACI;QACA;QACA;IACJ,GACA,OAAO;QACH,MAAM,cAAc;YAChB,GAAG,KAAK;YACR,gBAAgB,MAAM,cAAc,IAAI,MAAM,cAAc,KAAK,QAAQ,MAAM,cAAc,GAAG;QACpG;QACA,MAAM,SAAS,MAAM,OAAO;QAC5B,MAAM,SAAS,OAAO,MAAM;QAC5B,IAAI,CAAC,QAAQ;YACT,MAAM,IAAI,MAAM;QACpB;QACA,OAAO;IACX;AAER;AAEA,MAAM,oBAAoB,qBAAqB,qBAAqB,qBAAqB,6BAA6B;AACtH,MAAM,wBAAwB,qBAAqB,yBAAyB,yBAAyB,6BAA6B;AAClI,MAAM,yBAAyB,qBAAqB,0BAA0B,0BAA0B,6BAA6B;;;IAhG/G;IAcA;IAcA;;AA5BA,+OAAA;AAcA,+OAAA;AAcA,+OAAA","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Desktop/Career%20Compass/.next-internal/server/app/dashboard/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateFutureStudies as '4069362700e0c5a563ca230baa2e55de177b27c561'} from 'ACTIONS_MODULE0'\nexport {generatePlacementsAndJobs as '40145fb0498c3985e7418337aca386ffec575f0962'} from 'ACTIONS_MODULE0'\nexport {generateCollegeSuggestions as '40dfb1c6d6c1cdd1d665b2ea67f89680010903010f'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 465, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Desktop/Career%20Compass/src/app/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8R,GAC3T,4DACA","debugId":null}},
    {"offset": {"line": 479, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ASUS/OneDrive/Desktop/Career%20Compass/src/app/dashboard/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/dashboard/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/dashboard/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0Q,GACvS,wCACA","debugId":null}},
    {"offset": {"line": 493, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}